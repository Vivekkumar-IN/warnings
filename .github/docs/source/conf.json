[
    {
        "type": "warning",
        "module": ".github.docs.source.conf",
        "obj": "",
        "line": 16,
        "column": 0,
        "endLine": 16,
        "endColumn": 9,
        "path": ".github/docs/source/conf.py",
        "symbol": "redefined-builtin",
        "message": "Redefining built-in 'copyright'",
        "message-id": "W0622"
    },
    {
        "type": "convention",
        "module": ".github.docs.source.conf",
        "obj": "",
        "line": 15,
        "column": 0,
        "endLine": 15,
        "endColumn": 7,
        "path": ".github/docs/source/conf.py",
        "symbol": "invalid-name",
        "message": "Constant name \"project\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": ".github.docs.source.conf",
        "obj": "",
        "line": 16,
        "column": 0,
        "endLine": 16,
        "endColumn": 9,
        "path": ".github/docs/source/conf.py",
        "symbol": "invalid-name",
        "message": "Constant name \"copyright\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": ".github.docs.source.conf",
        "obj": "",
        "line": 17,
        "column": 0,
        "endLine": 17,
        "endColumn": 6,
        "path": ".github/docs/source/conf.py",
        "symbol": "invalid-name",
        "message": "Constant name \"author\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": ".github.docs.source.conf",
        "obj": "",
        "line": 22,
        "column": 0,
        "endLine": 22,
        "endColumn": 20,
        "path": ".github/docs/source/conf.py",
        "symbol": "invalid-name",
        "message": "Constant name \"autosummary_generate\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": ".github.docs.source.conf",
        "obj": "",
        "line": 37,
        "column": 0,
        "endLine": 37,
        "endColumn": 10,
        "path": ".github/docs/source/conf.py",
        "symbol": "invalid-name",
        "message": "Constant name \"html_title\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": ".github.docs.source.conf",
        "obj": "",
        "line": 38,
        "column": 0,
        "endLine": 38,
        "endColumn": 10,
        "path": ".github/docs/source/conf.py",
        "symbol": "invalid-name",
        "message": "Constant name \"html_theme\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": ".github.docs.source.conf",
        "obj": "",
        "line": 43,
        "column": 0,
        "endLine": 43,
        "endColumn": 16,
        "path": ".github/docs/source/conf.py",
        "symbol": "invalid-name",
        "message": "Constant name \"html_copy_source\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": ".github.docs.source.conf",
        "obj": "",
        "line": 46,
        "column": 0,
        "endLine": 46,
        "endColumn": 12,
        "path": ".github/docs/source/conf.py",
        "symbol": "invalid-name",
        "message": "Constant name \"html_favicon\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": ".github.docs.source.conf",
        "obj": "",
        "line": 50,
        "column": 0,
        "endLine": 50,
        "endColumn": 16,
        "path": ".github/docs/source/conf.py",
        "symbol": "invalid-name",
        "message": "Constant name \"html_show_sphinx\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": ".github.docs.source.conf",
        "obj": "",
        "line": 52,
        "column": 0,
        "endLine": 52,
        "endColumn": 33,
        "path": ".github/docs/source/conf.py",
        "symbol": "invalid-name",
        "message": "Constant name \"napoleon_include_special_with_doc\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": ".github.docs.source.conf",
        "obj": "",
        "line": 53,
        "column": 0,
        "endLine": 53,
        "endColumn": 24,
        "path": ".github/docs/source/conf.py",
        "symbol": "invalid-name",
        "message": "Constant name \"napoleon_numpy_docstring\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": ".github.docs.source.conf",
        "obj": "",
        "line": 54,
        "column": 0,
        "endLine": 54,
        "endColumn": 33,
        "path": ".github/docs/source/conf.py",
        "symbol": "invalid-name",
        "message": "Constant name \"napoleon_include_special_with_doc\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": ".github.docs.source.conf",
        "obj": "",
        "line": 55,
        "column": 0,
        "endLine": 55,
        "endColumn": 18,
        "path": ".github/docs/source/conf.py",
        "symbol": "invalid-name",
        "message": "Constant name \"napoleon_use_rtype\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": ".github.docs.source.conf",
        "obj": "",
        "line": 56,
        "column": 0,
        "endLine": 56,
        "endColumn": 18,
        "path": ".github/docs/source/conf.py",
        "symbol": "invalid-name",
        "message": "Constant name \"napoleon_use_param\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": ".github.docs.source.conf",
        "obj": "",
        "line": 58,
        "column": 0,
        "endLine": 58,
        "endColumn": 20,
        "path": ".github/docs/source/conf.py",
        "symbol": "invalid-name",
        "message": "Constant name \"autodoc_member_order\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "refactor",
        "module": ".github.docs.source.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": ".github/docs/source/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.core.bot:[62:103]\n==YukkiMusic.core.userbot:[103:145]\n                try:\n                    await func(client, message)\n                except FloodWait as e:\n                    logger(__name__).warning(\n                        \"FloodWait: Sleeping for %d seconds.\", e.value\n                    )\n                    await asyncio.sleep(e.value)\n                except (\n                    ChatWriteForbidden,\n                    ChatSendMediaForbidden,\n                    ChatSendPhotosForbidden,\n                    MessageNotModified,\n                    MessageIdInvalid,\n                ):\n                    pass\n                except StopPropagation:\n                    raise\n                except Exception as e:\n                    # Detailed error logging\n                    date_time = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n                    user_id = message.from_user.id if message.from_user else \"Unknown\"\n                    chat_id = message.chat.id if message.chat else \"Unknown\"\n                    chat_username = (\n                        f\"@{message.chat.username}\"\n                        if message.chat.username\n                        else \"Private Group\"\n                    )\n                    command = (\n                        \" \".join(message.command)\n                        if hasattr(message, \"command\")\n                        else message.text\n                    )\n                    error_trace = traceback.format_exc()\n                    error_message = (\n                        f\"**Error:** {type(e).__name__}\\n\"\n                        f\"**Date:** {date_time}\\n\"\n                        f\"**Chat ID:** {chat_id}\\n\"\n                        f\"**Chat Username:** {chat_username}\\n\"\n                        f\"**User ID:** {user_id}\\n\"\n                        f\"**Command/Text:** {command}\\n\"\n                        f\"**Traceback:**\\n{error_trace}\"\n                    )",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": ".github.docs.source.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": ".github/docs/source/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.plugins.misc.autoleave:[79:94]\n==YukkiMusic.plugins.misc.seeker:[107:121]\n                userbot = await get_assistant(chat_id)\n                members = []\n                try:\n                    async for member in userbot.get_call_members(chat_id):\n                        if member is None:\n                            continue\n                        members.append(member)\n                except ValueError:\n                    try:\n                        await Yukki.stop_stream(chat_id)\n                    except Exception:\n                        pass\n                    continue\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": ".github.docs.source.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": ".github/docs/source/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.plugins.play.playlist:[421:438]\n==YukkiMusic.plugins.play.toptracks:[35:52]\n    try:\n        await CallbackQuery.answer()\n    except Exception:\n        pass\n    buttons = botplaylist_markup(_)\n    return await CallbackQuery.edit_message_reply_markup(\n        buttons=InlineKeyboardMarkup(buttons)\n    )\n\n\n@app.on_callback_query(filters.regex(\"delete_warning\") & ~BANNED_USERS)\n@language\nasync def delete_warning_message(client, CallbackQuery, _):\n    try:\n        await CallbackQuery.answer()\n    except Exception:\n        pass",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": ".github.docs.source.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": ".github/docs/source/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.plugins.bot.start:[91:103]\n==YukkiMusic.plugins.tools.stats:[70:82]\n        results = {}\n        for i in stats:\n            top_list = stats[i][\"spot\"]\n            results[str(i)] = top_list\n            list_arranged = dict(\n                sorted(\n                    results.items(),\n                    key=lambda item: item[1],\n                    reverse=True,\n                )\n            )\n        if not results:",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": ".github.docs.source.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": ".github/docs/source/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.utils.inline.playlist:[94:109]\n==YukkiMusic.utils.inline.stats:[20:34]\n            ),\n            Button.inline(\n                text=_[\"CLOSE_BUTTON\"],\n                data=\"close\",\n            ),\n        ],\n    ]\n    return upl\n\n\ndef overallback_stats_markup(_):\n    upl = [\n        [\n            Button.inline(",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": ".github.docs.source.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": ".github/docs/source/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.core.call:[592:606]\n==YukkiMusic.plugins.admins.skip:[187:201]\n                        photo=(\n                            config.TELEGRAM_AUDIO_URL\n                            if str(streamtype) == \"audio\"\n                            else config.TELEGRAM_VIDEO_URL\n                        ),\n                        caption=_[\"stream_1\"].format(\n                            title, config.SUPPORT_GROUP, check[0][\"dur\"], user\n                        ),\n                        buttons=InlineKeyboardMarkup(button),\n                    )\n                    db[chat_id][0][\"mystic\"] = run\n                    db[chat_id][0][\"markup\"] = \"tg\"\n                elif videoid == \"soundcloud\":\n                    button = telegram_markup(_, chat_id)",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": ".github.docs.source.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": ".github/docs/source/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.utils.inline.playlist:[95:109]\n==YukkiMusic.utils.inline.stats:[105:118]\n            Button.inline(\n                text=_[\"CLOSE_BUTTON\"],\n                data=\"close\",\n            ),\n        ],\n    ]\n\n    return upl\n\n\ndef close_markup(_):\n    upl = [\n        [\n            Button.inline(",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": ".github.docs.source.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": ".github/docs/source/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.plugins.play.play:[374:384]\n==YukkiMusic.plugins.play.stream:[53:63]\n        await mystic.edit_text(_[\"str_2\"])\n        try:\n            await stream(\n                _,\n                mystic,\n                message.from_user.id,\n                url,\n                chat_id,\n                message.from_user.first_name,\n                message.chat.id,",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": ".github.docs.source.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": ".github/docs/source/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.plugins.play.play:[64:74]\n==YukkiMusic.utils.decorators.play:[69:79]\n        audio_telegram = (\n            (message.reply_to_message.audio or message.reply_to_message.voice)\n            if message.reply_to_message\n            else None\n        )\n        video_telegram = (\n            (message.reply_to_message.video or message.reply_to_message.document)\n            if message.reply_to_message\n            else None\n        )",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": ".github.docs.source.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": ".github/docs/source/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.plugins.play.live:[62:71]\n==YukkiMusic.plugins.play.stream:[65:74]\n            )\n        except Exception as e:\n            ex_type = type(e).__name__\n            err = (\n                e\n                if ex_type == \"AssistantErr\"\n                else _[\"ERROR_OCCURRED_MSG\"].format(ex_type)\n            )\n            return await mystic.edit_text(err)",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": ".github.docs.source.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": ".github/docs/source/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.plugins.play.playlist:[174:188]\n==YukkiMusic.plugins.play.toptracks:[127:136]\n            streamtype=\"playlist\",\n        )\n    except Exception as e:\n        ex_type = type(e).__name__\n        err = (\n            e if ex_type == \"AssistantErr\" else _[\"ERROR_OCCURRED_MSG\"].format(ex_type)\n        )\n        return await mystic.edit_text(err)\n    return await mystic.delete()",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": ".github.docs.source.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": ".github/docs/source/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.plugins.admins.callback:[405:414]\n==YukkiMusic.plugins.admins.seek:[59:68]\n        try:\n            await Yukki.seek_stream(\n                chat_id,\n                file_path,\n                seconds_to_min(to_seek),\n                duration,\n                playing[0][\"streamtype\"],\n            )\n        except Exception:",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": ".github.docs.source.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": ".github/docs/source/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.plugins.bot.start:[94:103]\n==YukkiMusic.plugins.tools.stats:[151:160]\n                    results[str(i)] = top_list\n                    list_arranged = dict(\n                        sorted(\n                            results.items(),\n                            key=lambda item: item[1],\n                            reverse=True,\n                        )\n                    )\n                if not results:",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": ".github.docs.source.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": ".github/docs/source/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.core.call:[594:604]\n==YukkiMusic.plugins.admins.skip:[204:214]\n                    if str(streamtype) == \"audio\"\n                    else config.TELEGRAM_VIDEO_URL\n                ),\n                caption=_[\"stream_1\"].format(\n                    title, config.SUPPORT_GROUP, check[0][\"dur\"], user\n                ),\n                buttons=InlineKeyboardMarkup(button),\n            )\n            db[chat_id][0][\"mystic\"] = run\n            db[chat_id][0][\"markup\"] = \"tg\"",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": ".github.docs.source.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": ".github/docs/source/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.plugins.play.playlist:[350:358]\n==YukkiMusic.plugins.tools.stats:[98:106]\n            return\n    (\n        title,\n        duration_min,\n        duration_sec,\n        thumbnail,\n        vidid,\n    ) = await Platform.youtube.track(videoid, True)",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": ".github.docs.source.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": ".github/docs/source/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.plugins.play.live:[50:58]\n==YukkiMusic.plugins.play.play:[94:102]\n            try:\n                await stream(\n                    _,\n                    mystic,\n                    user_id,\n                    details,\n                    chat_id,\n                    user_name,",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": ".github.docs.source.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": ".github/docs/source/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.plugins.admins.callback:[568:576]\n==YukkiMusic.plugins.play.playlist:[164:172]\n    try:\n        await stream(\n            _,\n            mystic,\n            user_id,\n            result,\n            chat_id,\n            user_name,",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": ".github.docs.source.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": ".github/docs/source/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.plugins.admins.callback:[262:270]\n==YukkiMusic.plugins.admins.skip:[138:146]\n        try:\n            file_path, direct = await Platform.youtube.download(\n                videoid,\n                mystic,\n                videoid=True,\n                video=status,\n            )\n        except Exception:",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": ".github.docs.source.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": ".github/docs/source/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.plugins.admins.stop:[68:76]\n==YukkiMusic.plugins.tools.queue:[55:63]\n    if message.command[0][0] == \"c\":\n        chat_id = await get_cmode(message.chat.id)\n        if chat_id is None:\n            return await message.reply_text(_[\"setting_12\"])\n        try:\n            await app.get_chat(chat_id)\n        except Exception:\n            return await message.reply_text(_[\"cplay_4\"])",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": ".github.docs.source.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": ".github/docs/source/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.core.bot:[101:109]\n==YukkiMusic.core.telethon:[117:126]\n            f\"**Traceback:**\\n{error_trace}\"\n        )\n\n        await self.send_message(config.LOG_GROUP_ID, error_message)\n\n        try:\n            await self.send_message(config.OWNER_ID[0], error_message)\n        except Exception:\n            pass",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": ".github.docs.source.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": ".github/docs/source/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.plugins.misc.autoleave:[86:94]\n==YukkiMusic.plugins.misc.seeker:[63:71]\n                        members.append(member)\n                except ValueError:\n                    try:\n                        await Yukki.stop_stream(chat_id)\n                    except Exception:\n                        pass\n                    continue\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": ".github.docs.source.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": ".github/docs/source/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.plugins.sudo.block:[23:30]\n==YukkiMusic.plugins.sudo.sudoers:[28:35]\n    if not message.reply_to_message:\n        if len(message.command) != 2:\n            return await message.reply_text(_[\"USER_IDENTIFIER_REQUIRED\"])\n        user = message.text.split(None, 1)[1]\n        if \"@\" in user:\n            user = user.replace(\"@\", \"\")\n        user = await app.get_users(user)",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": ".github.docs.source.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": ".github/docs/source/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.plugins.play.playlist:[50:56]\n==YukkiMusic.utils.stream.stream:[147:153]\n    link = await paste(msg)\n    lines = msg.count(\"\\n\")\n    if lines >= 17:\n        car = os.linesep.join(msg.split(os.linesep)[:17])\n    else:\n        car = msg",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": ".github.docs.source.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": ".github/docs/source/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.core.bot:[283:291]\n==YukkiMusic.core.telethon:[173:181]\n        process = await asyncio.create_subprocess_exec(\n            *command,\n            stdout=asyncio.subprocess.PIPE,\n            stderr=asyncio.subprocess.PIPE,\n        )\n\n        stdout, stderr = await process.communicate()\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": ".github.docs.source.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": ".github/docs/source/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.plugins.play.playlist:[351:357]\n==YukkiMusic.plugins.tools.songs:[114:120]\n        (\n            title,\n            duration_min,\n            duration_sec,\n            thumbnail,\n            vidid,",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": ".github.docs.source.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": ".github/docs/source/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.plugins.tools.songs:[74:80]\n==YukkiMusic.plugins.tools.stats:[99:105]\n    (\n        title,\n        duration_min,\n        duration_sec,\n        thumbnail,\n        vidid,",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": ".github.docs.source.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": ".github/docs/source/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.core.youtube:[83:90]\n==YukkiMusic.plugins.sudo.dev:[167:173]\n            process = await asyncio.create_subprocess_shell(\n                command,\n                stdout=asyncio.subprocess.PIPE,\n                stderr=asyncio.subprocess.PIPE,\n            )\n            stdout, stderr = await process.communicate()\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": ".github.docs.source.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": ".github/docs/source/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.plugins.admins.callback:[348:354]\n==YukkiMusic.plugins.admins.skip:[222:228]\n                )\n                db[chat_id][0][\"mystic\"] = run\n                db[chat_id][0][\"markup\"] = \"tg\"\n            else:\n                button = stream_markup(_, videoid, chat_id)\n                img = await gen_thumb(videoid)",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": ".github.docs.source.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": ".github/docs/source/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.plugins.admins.stop:[82:88]\n==YukkiMusic.utils.decorators.play:[114:120]\n            if message.from_user.id not in SUDOERS:\n                admins = adminlist.get(message.chat.id)\n                if not admins:\n                    return await message.reply_text(_[\"admin_18\"])\n                else:\n                    if message.from_user.id not in admins:",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": ".github.docs.source.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": ".github/docs/source/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.plugins.admins.callback:[162:168]\n==YukkiMusic.plugins.admins.stop:[89:95]\n        try:\n            check = db.get(chat_id)\n            if check[0].get(\"mystic\"):\n                await check[0].get(\"mystic\").delete()\n        except Exception:\n            pass",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": ".github.docs.source.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": ".github/docs/source/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.core.call:[539:546]\n==YukkiMusic.plugins.admins.skip:[173:180]\n            photo=config.STREAM_IMG_URL,\n            caption=_[\"stream_2\"].format(user),\n            buttons=InlineKeyboardMarkup(button),\n        )\n        db[chat_id][0][\"mystic\"] = run\n        db[chat_id][0][\"markup\"] = \"tg\"\n    else:",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": ".github.docs.source.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": ".github/docs/source/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.core.call:[456:462]\n==YukkiMusic.plugins.admins.skip:[137:143]\n        )\n        try:\n            file_path, direct = await Platform.youtube.download(\n                videoid,\n                mystic,\n                videoid=True,",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": ".github.docs.source.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": ".github/docs/source/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.core.call:[370:378]\n==YukkiMusic.plugins.admins.skip:[81:89]\n            if popped:\n                await auto_clean(popped)\n                if popped.get(\"mystic\"):\n                    try:\n                        await popped.get(\"mystic\").delete()\n                    except Exception:\n                        pass\n            if not check:",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": ".github.docs.source.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": ".github/docs/source/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.plugins.sudo.autoend:[19:24]\n==YukkiMusic.plugins.sudo.logger:[23:28]\n    if len(message.command) != 2:\n        return await message.reply_text(usage)\n    state = message.text.split(None, 1)[1].strip()\n    state = state.lower()\n    if state == \"enable\":",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": ".github.docs.source.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": ".github/docs/source/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.plugins.play.play:[314:319]\n==YukkiMusic.plugins.play.playlist:[215:220]\n            try:\n                await stream(\n                    _,\n                    mystic,\n                    user_id,",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": ".github.docs.source.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": ".github/docs/source/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.plugins.play.play:[143:148]\n==YukkiMusic.plugins.play.playlist:[164:169]\n    try:\n        await stream(\n            _,\n            mystic,\n            user_id,",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": ".github.docs.source.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": ".github/docs/source/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.plugins.admins.callback:[290:295]\n==YukkiMusic.plugins.admins.skip:[165:170]\n        await mystic.delete()\n    elif \"index_\" in queued:\n        try:\n            await Yukki.skip_stream(chat_id, videoid, video=status)\n        except Exception:",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": ".github.docs.source.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": ".github/docs/source/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.plugins.admins.callback:[219:224]\n==YukkiMusic.plugins.admins.skip:[93:98]\n                try:\n                    return await Yukki.stop_stream(chat_id)\n                except Exception:\n                    return\n        except Exception:",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": ".github.docs.source.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": ".github/docs/source/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.plugins.admins.callback:[568:573]\n==YukkiMusic.plugins.play.play:[94:99]\n    try:\n        await stream(\n            _,\n            mystic,\n            user_id,",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": ".github.docs.source.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": ".github/docs/source/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.plugins.bot.settings:[232:237]\n==YukkiMusic.plugins.play.playmode:[39:44]\n    if playty == \"Everyone\":\n        Playtype = None\n    else:\n        Playtype = True\n    buttons = playmode_users_markup(_, Direct, Group, Playtype)",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": ".github.docs.source.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": ".github/docs/source/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.plugins.admins.stop:[44:49]\n==YukkiMusic.utils.decorators.play:[63:69]\n        if await is_commanddelete_on(message.chat.id):\n            try:\n                await message.delete()\n            except Exception:\n                pass\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": ".github.docs.source.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": ".github/docs/source/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.plugins.admins.stop:[49:55]\n==YukkiMusic.plugins.sudo.maintenance:[25:30]\n    try:\n        language = await get_lang(message.chat.id)\n        _ = get_string(language)\n    except Exception:\n        _ = get_string(\"en\")",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": ".github.docs.source.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": ".github/docs/source/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.plugins.play.toptracks:[63:68]\n==YukkiMusic.plugins.tools.queue:[155:165]\n    try:\n        await CallbackQuery.answer()\n    except Exception:\n        pass\n\n\n@app.on_callback_query(filters.regex(\"GetQueued\") & ~BANNED_USERS)\n@language\nasync def queued_tracks(client, CallbackQuery: CallbackQuery, _):\n    callback_data = CallbackQuery.data.strip()",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": ".github.docs.source.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": ".github/docs/source/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.plugins.tools.queue:[55:60]\n==YukkiMusic.utils.decorators.play:[90:95]\n    if message.command[0][0] == \"c\":\n        chat_id = await get_cmode(message.chat.id)\n        if chat_id is None:\n            return await message.reply_text(_[\"setting_12\"])\n        try:",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": ".github.docs.source.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": ".github/docs/source/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.core.call:[372:377]\n==YukkiMusic.plugins.admins.skip:[47:52]\n                if popped.get(\"mystic\"):\n                    try:\n                        await popped.get(\"mystic\").delete()\n                    except Exception:\n                        pass",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": ".github.docs.source.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": ".github/docs/source/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.core.call:[605:610]\n==YukkiMusic.utils.stream.stream:[411:416]\n            button = telegram_markup(_, chat_id)\n            run = await app.send_photo(\n                original_chat_id,\n                photo=config.SOUNCLOUD_IMG_URL,\n                caption=_[\"stream_1\"].format(",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": ".github.docs.source.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": ".github/docs/source/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.core.call:[630:635]\n==YukkiMusic.utils.stream.stream:[221:226]\n                    run = await app.send_photo(\n                        original_chat_id,\n                        photo=img,\n                        caption=_[\"stream_1\"].format(\n                            title[:27],",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": ".github.docs.source.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": ".github/docs/source/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.core.call:[502:507]\n==YukkiMusic.utils.stream.stream:[131:136]\n                run = await app.send_photo(\n                    original_chat_id,\n                    photo=img,\n                    caption=_[\"stream_1\"].format(\n                        title[:27],",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": ".github.docs.source.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": ".github/docs/source/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.core.call:[206:211]\n==YukkiMusic.plugins.misc.seeker:[99:105]\n            try:\n                language = await get_lang(chat_id)\n                _ = get_string(language)\n            except Exception:\n                _ = get_string(\"en\")\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": ".github.docs.source.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": ".github/docs/source/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.core.call:[457:462]\n==YukkiMusic.plugins.admins.callback:[262:267]\n            try:\n                file_path, direct = await Platform.youtube.download(\n                    videoid,\n                    mystic,\n                    videoid=True,",
        "message-id": "R0801"
    }
]