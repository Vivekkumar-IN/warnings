[
    {
        "type": "refactor",
        "module": "docs.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "docs/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.plugins.admins.callback:[222:254]\n==YukkiMusic.plugins.admins.skip:[101:133]\n        track = check[0][\"track\"]\n        user = check[0][\"by\"]\n        url = (\n            f\"https://t.me/{tbot.username}?start=info_{track.vidid}\"\n            if track.is_youtube\n            else track.link\n        )\n        db[chat_id][0][\"played\"] = 0\n        mystic = await event.reply(_[\"call_8\"], link_preview=False)\n\n        try:\n            file_path = await track.download()\n            await Yukki.skip_stream(chat_id, file_path, video=track.video)\n\n        except Exception as e:\n            await tbot.handle_error(e, event)\n            return await mystic.edit(_[\"call_7\"])\n\n        what, button = play_markup(_, chat_id, track)\n\n        run = await event.respond(\n            file=track.thumb,\n            message=_[\"stream_1\"].format(\n                track.title[:27],\n                url,\n                seconds_to_min(track.duration),\n                user,\n            ),\n            buttons=button,\n        )\n        db[chat_id][0][\"mystic\"] = run\n        db[chat_id][0][\"markup\"] = what",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "docs.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "docs/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.plugins.bot.start:[94:106]\n==YukkiMusic.plugins.play.toptracks:[78:90]\n        results = {}\n        for i in stats:\n            top_list = stats[i][\"spot\"]\n            results[str(i)] = top_list\n            list_arranged = dict(\n                sorted(\n                    results.items(),\n                    key=lambda item: item[1],\n                    reverse=True,\n                )\n            )\n        if not results:",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "docs.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "docs/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.plugins.admins.auth:[131:141]\n==YukkiMusic.plugins.bot.settings:[430:440]\n                _note = await get_authuser(event.chat_id, note)\n                user_id = _note[\"auth_user_id\"]\n                admin_id = _note[\"admin_id\"]\n                admin_name = _note[\"admin_name\"]\n                try:\n                    user = await tbot.get_entity(user_id)\n                    user = user.first_name\n                    j += 1\n                except Exception:\n                    continue",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "docs.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "docs/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.plugins.play.stream:[55:64]\n==YukkiMusic.plugins.play.toptracks:[115:125]\n            )\n        except Exception as e:\n            ex_type = type(e).__name__\n            if ex_type == \"AssistantErr\":\n                err = e\n            else:\n                err = _[\"general_3\"].format(ex_type)\n                logger.error(\"\\n\", exc_info=True)\n            return await mystic.edit(err)",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "docs.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "docs/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.core.call:[408:419]\n==YukkiMusic.plugins.admins.callback:[245:254]\n                    track.title[:27],\n                    url,\n                    seconds_to_min(track.duration),\n                    user,\n                ),\n                buttons=button,\n            )\n            db[chat_id][0][\"mystic\"] = run\n            db[chat_id][0][\"markup\"] = what\n\n    async def ping(self):",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "docs.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "docs/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.plugins.play.play:[223:232]\n==YukkiMusic.plugins.play.playlist:[384:392]\n            user_id=user_id,\n            forceplay=fplay,\n        )\n    except Exception as e:\n        ex_type = type(e).__name__\n        if ex_type == \"AssistantErr\":\n            err = e\n        else:",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "docs.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "docs/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.plugins.play.playlist:[385:393]\n==YukkiMusic.plugins.play.stream:[54:62]\n            forceplay=fplay,\n        )\n    except Exception as e:\n        ex_type = type(e).__name__\n        if ex_type == \"AssistantErr\":\n            err = e\n        else:\n            err = _[\"general_3\"].format(ex_type)",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "docs.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "docs/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.plugins.play.playlist:[328:336]\n==YukkiMusic.plugins.play.toptracks:[114:122]\n            user_id=user_id,\n        )\n    except Exception as e:\n        ex_type = type(e).__name__\n        if ex_type == \"AssistantErr\":\n            err = e\n        else:\n            err = _[\"general_3\"].format(ex_type)",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "docs.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "docs/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.plugins.admins.callback:[322:330]\n==YukkiMusic.plugins.play.live:[25:34]\n        try:\n            return await event.answer(_[\"playcb_1\"], alert=True)\n        except Exception:\n            return\n    try:\n        chat_id, channel = await get_channeplay_cb(_, cplay, event)\n    except Exception:\n        return",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "docs.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "docs/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.plugins.sudo.block:[20:28]\n==YukkiMusic.plugins.sudo.sudoers:[23:31]\n    if not event.is_reply:\n        if len(event.text.split()) != 2:\n            return await event.reply(_[\"general_1\"])\n        user = event.text.split(None, 1)[1]\n        if \"@\" in user:\n            user = user.replace(\"@\", \"\")\n        user = await tbot.get_entity(user)\n        mention = await tbot.create_mention(user)",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "docs.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "docs/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.plugins.play.play:[224:232]\n==YukkiMusic.plugins.play.stream:[54:61]\n                forceplay=fplay,\n            )\n\n        except Exception as e:\n            ex_type = type(e).__name__\n            if ex_type == \"AssistantErr\":\n                err = e\n            else:",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "docs.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "docs/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.plugins.play.play:[171:178]\n==YukkiMusic.plugins.play.stream:[41:48]\n            title=\"M3U8 or index Urls\",\n            link=url,\n            thumb=config.STREAM_IMG_URL,\n            duration=0,\n            streamtype=SourceType.M3U8,\n            video=video,\n        )",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "docs.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "docs/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.plugins.play.playlist:[329:336]\n==YukkiMusic.plugins.play.stream:[55:62]\n        )\n    except Exception as e:\n        ex_type = type(e).__name__\n        if ex_type == \"AssistantErr\":\n            err = e\n        else:\n            err = _[\"general_3\"].format(ex_type)",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "docs.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "docs/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.plugins.play.playlist:[386:393]\n==YukkiMusic.plugins.play.toptracks:[115:122]\n        )\n    except Exception as e:\n        ex_type = type(e).__name__\n        if ex_type == \"AssistantErr\":\n            err = e\n        else:\n            err = _[\"general_3\"].format(ex_type)",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "docs.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "docs/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.plugins.play.playlist:[346:353]\n==YukkiMusic.plugins.tools.queue:[46:53]\n        chat_id = await get_cmode(event.chat_id)\n        if chat_id is None:\n            return await event.reply(_[\"setting_12\"])\n        try:\n            await tbot.get_entity(chat_id)\n        except Exception:\n            return await event.reply(_[\"cplay_4\"])",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "docs.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "docs/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.plugins.sudo.block:[20:27]\n==YukkiMusic.plugins.sudo.sudoers:[61:68]\n    if not event.is_reply:\n        if len(event.text.split()) != 2:\n            return await event.reply(_[\"general_1\"])\n        user = event.text.split(None, 1)[1]\n        if \"@\" in user:\n            user = user.replace(\"@\", \"\")\n        user = await tbot.get_entity(user)",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "docs.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "docs/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.plugins.misc.autoleave:[89:97]\n==YukkiMusic.plugins.misc.seeker:[61:69]\n                            members.append(member)\n                except ValueError:\n                    try:\n                        await Yukki.stop_stream(chat_id)\n                    except Exception:\n                        pass\n                    continue\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "docs.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "docs/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.plugins.play.play:[225:232]\n==YukkiMusic.plugins.play.toptracks:[115:121]\n        )\n    except Exception as e:\n        ex_type = type(e).__name__\n        if ex_type == \"AssistantErr\":\n            err = e\n        else:",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "docs.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "docs/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.plugins.admins.callback:[418:424]\n==YukkiMusic.plugins.play.live:[34:40]\n    await event.delete()\n    try:\n        await event.answer()\n    except Exception:\n        pass\n    mystic = await event.reply(_[\"play_2\"].format(channel) if channel else _[\"play_1\"])",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "docs.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "docs/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.plugins.admins.callback:[154:160]\n==YukkiMusic.plugins.admins.stop:[23:30]\n        try:\n            check = db.get(chat_id)\n            if check[0].get(\"mystic\"):\n                await check[0].get(\"mystic\").delete()\n        except Exception:\n            pass",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "docs.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "docs/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.plugins.play.live:[31:38]\n==YukkiMusic.plugins.sudo.dev:[140:146]\n    except Exception:\n        return\n\n    await event.delete()\n    try:\n        await event.answer()\n    except Exception:",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "docs.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "docs/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.core.telethon:[280:288]\n==YukkiMusic.core.track:[144:151]\n            process = await asyncio.create_subprocess_shell(\n                command,\n                stdout=asyncio.subprocess.PIPE,\n                stderr=asyncio.subprocess.PIPE,\n            )\n            stdout, stderr = await process.communicate()\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "docs.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "docs/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.platforms.apple:[34:43]\n==YukkiMusic.platforms.spotify:[45:54]\n            \"playlist\": self.playlist,\n        }\n        for key, handler in handlers.items():\n            if key in url:\n                return await handler(url)\n        return None\n\n    @alru_cache(maxsize=None)\n    async def __track(self, url: str) -> Track | bool:",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "docs.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "docs/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.plugins.play.playlist:[82:88]\n==YukkiMusic.utils.stream.stream:[126:132]\n    link = await paste(msg)\n    lines = msg.count(\"\\n\")\n    if lines >= 17:\n        car = os.linesep.join(msg.split(os.linesep)[:17])\n    else:\n        car = msg",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "docs.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "docs/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.utils.decorators.admins:[72:78]\n==YukkiMusic.utils.decorators.play:[111:117]\n            if event.sender_id not in SUDOERS:\n                admins = adminlist.get(event.chat_id)\n                if not admins:\n                    return await event.reply(_[\"admin_18\"])\n                else:\n                    if event.sender_id not in admins:",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "docs.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "docs/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.plugins.play.live:[47:52]\n==YukkiMusic.plugins.play.stream:[48:53]\n        try:\n            await stream(\n                chat_id=chat_id,\n                original_chat_id=event.chat_id,\n                track=track,",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "docs.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "docs/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.plugins.play.toptracks:[54:59]\n==YukkiMusic.plugins.tools.queue:[125:135]\n    try:\n        await event.answer()\n    except Exception:\n        pass\n    callback_data = event.data.decode(\"utf-8\").strip()",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "docs.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "docs/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.plugins.admins.callback:[333:338]\n==YukkiMusic.plugins.play.live:[36:41]\n        await event.answer()\n    except Exception:\n        pass\n    mystic = await event.reply(_[\"play_2\"].format(channel) if channel else _[\"play_1\"])\n    try:",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "docs.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "docs/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.plugins.admins.callback:[296:301]\n==YukkiMusic.plugins.admins.seek:[78:83]\n        await Yukki.seek_stream(\n            chat_id,\n            file_path,\n            seconds_to_min(to_seek),\n            duration,",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "docs.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "docs/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.plugins.sudo.autoend:[19:24]\n==YukkiMusic.plugins.sudo.logger:[19:24]\n    if len(event.text.split()) != 2:\n        return await event.reply(usage)\n    state = event.text.split(None, 1)[1].strip()\n    state = state.lower()\n    if state == \"enable\":",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "docs.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "docs/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.core.call:[199:204]\n==YukkiMusic.plugins.misc.seeker:[96:102]\n            try:\n                language = await get_lang(chat_id)\n                _ = get_string(language)\n            except Exception:\n                _ = get_string(\"en\")\n",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "docs.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "docs/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.plugins.play.playlist:[345:350]\n==YukkiMusic.utils.decorators.admins:[58:63]\n    if cplay:\n        chat_id = await get_cmode(event.chat_id)\n        if chat_id is None:\n            return await event.reply(_[\"setting_12\"])\n        try:",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "docs.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "docs/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.plugins.sudo.maintenance:[25:30]\n==YukkiMusic.utils.decorators.admins:[41:46]\n        try:\n            language = await get_lang(event.chat_id)\n            _ = get_string(language)\n        except Exception:\n            _ = get_string(\"en\")",
        "message-id": "R0801"
    },
    {
        "type": "refactor",
        "module": "docs.conf",
        "obj": "",
        "line": 1,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "docs/conf.py",
        "symbol": "duplicate-code",
        "message": "Similar lines in 2 files\n==YukkiMusic.utils.decorators.admins:[36:41]\n==YukkiMusic.utils.decorators.play:[68:74]\n        if await is_commanddelete_on(event.chat_id):\n            try:\n                await event.delete()\n            except Exception:\n                pass\n",
        "message-id": "R0801"
    },
    {
        "type": "error",
        "module": "docs.conf",
        "obj": "",
        "line": 6,
        "column": 0,
        "endLine": null,
        "endColumn": null,
        "path": "docs/conf.py",
        "symbol": "unrecognized-inline-option",
        "message": "Unrecognized file option 'disabe'",
        "message-id": "E0011"
    },
    {
        "type": "convention",
        "module": "docs.conf",
        "obj": "",
        "line": 10,
        "column": 0,
        "endLine": 10,
        "endColumn": 7,
        "path": "docs/conf.py",
        "symbol": "invalid-name",
        "message": "Constant name \"project\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "docs.conf",
        "obj": "",
        "line": 11,
        "column": 0,
        "endLine": 11,
        "endColumn": 17,
        "path": "docs/conf.py",
        "symbol": "invalid-name",
        "message": "Constant name \"project_copyright\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "docs.conf",
        "obj": "",
        "line": 12,
        "column": 0,
        "endLine": 12,
        "endColumn": 6,
        "path": "docs/conf.py",
        "symbol": "invalid-name",
        "message": "Constant name \"author\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "docs.conf",
        "obj": "",
        "line": 13,
        "column": 0,
        "endLine": 13,
        "endColumn": 7,
        "path": "docs/conf.py",
        "symbol": "invalid-name",
        "message": "Constant name \"release\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "docs.conf",
        "obj": "",
        "line": 23,
        "column": 0,
        "endLine": 23,
        "endColumn": 10,
        "path": "docs/conf.py",
        "symbol": "invalid-name",
        "message": "Constant name \"html_title\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "docs.conf",
        "obj": "",
        "line": 24,
        "column": 0,
        "endLine": 24,
        "endColumn": 9,
        "path": "docs/conf.py",
        "symbol": "invalid-name",
        "message": "Constant name \"html_logo\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "docs.conf",
        "obj": "",
        "line": 25,
        "column": 0,
        "endLine": 25,
        "endColumn": 10,
        "path": "docs/conf.py",
        "symbol": "invalid-name",
        "message": "Constant name \"html_theme\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "docs.conf",
        "obj": "",
        "line": 26,
        "column": 0,
        "endLine": 26,
        "endColumn": 12,
        "path": "docs/conf.py",
        "symbol": "invalid-name",
        "message": "Constant name \"html_baseurl\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "docs.conf",
        "obj": "",
        "line": 29,
        "column": 0,
        "endLine": 29,
        "endColumn": 12,
        "path": "docs/conf.py",
        "symbol": "invalid-name",
        "message": "Constant name \"html_favicon\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    },
    {
        "type": "convention",
        "module": "docs.conf",
        "obj": "",
        "line": 30,
        "column": 0,
        "endLine": 30,
        "endColumn": 14,
        "path": "docs/conf.py",
        "symbol": "invalid-name",
        "message": "Constant name \"pygments_style\" doesn't conform to UPPER_CASE naming style",
        "message-id": "C0103"
    }
]